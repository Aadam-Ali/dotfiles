---
- name: Retrieve GPG Keys For Package Repositories
  ansible.builtin.get_url:
    url: "{{ item.value }}"
    dest: "{{ item.key }}"
  become: true
  loop: "{{ pkg_repos_keys | dict2items }}"

- name: Add Package Repositories
  ansible.builtin.apt_repository:
    repo: "{{ item.value }}"
    filename: "{{ item.key }}"
    state: present
  become: true
  loop: "{{ pkg_repos | dict2items }}"

- name: Update Apt Cache & Packages
  ansible.builtin.apt:
    name: "*"
    state: latest
    autoremove: true
    update_cache: true
  become: true

- name: Install Standard Packages
  ansible.builtin.apt:
    name: "{{ common_pkgs + os_pkgs }}"
    state: present
  become: true

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ docker_pkgs }}"
    state: present
  become: true

- name: Enable Docker
  ansible.builtin.systemd:
    name: docker
    state: started
  become: true

- name: "Add '{{ ansible_user_id }}' To Docker Group"
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  become: true

- name: Create Font Dirs
  ansible.builtin.file:
    path: "{{ ansible_env['HOME'] }}/.fonts/{{ item.key }}"
    state: directory
  loop: "{{ fonts | dict2items }}"

- name: Install Fonts
  ansible.builtin.unarchive:
    creates: "{{ ansible_env['HOME'] }}/.fonts/{{ item.key }}/README.md"
    src: "{{ item.value }}"
    dest: "{{ ansible_env['HOME'] }}/.fonts/{{ item.key }}"
    remote_src: yes
  loop: "{{ fonts | dict2items }}"
