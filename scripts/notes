#!/usr/bin/env bash
set -e

cd "${NOTES}" || echo "${NOTES} environment variable not found OR directory does not exit"

help() {
  cat << EOF
 USAGE:

  notes  new [book] [title]
  notes  generate-readme-files
  notes  search [query]
EOF
}

command_not_found() {
  echo "nb: unexpected command '$1'"
  echo "Try 'nb help' for more information"
  exit 1
}

generate_readme_files() {
  echo "# Notes" > "${NOTES}/README.md"
  echo >> "${NOTES}/README.md"

  for nb in */; do
    fmtd_nb=$(basename "$nb")
    nb_dir="${NOTES}/$nb"
    cd "$nb_dir" || exit

    echo "* [$fmtd_nb]($fmtd_nb/README.md)" >> "${NOTES}/README.md"
    echo -e "---\ntitle: $fmtd_nb\n---\n\n# $fmtd_nb\n" > "$nb_dir/README.md"

    for note in *[^A-Z][^a-z].md; do
      title=$(grep --max-count=1 'title: ' "$note" | sed 's/title: //')
      time="${note//.md/}"
      echo "* $time [$title]($note)" >> "$nb_dir/README.md"
    done
  done
}

link_note() {
  note=$(grep -r 'title: ' --max-count=1 --exclude="README.md" ./*/*.md | sed 's/title://' | fzy)
  file=$(echo "$note" | cut -d':' -f1 | sed 's/\.\///')
  time=$(echo "$file" | cut -d'/' -f2 | sed 's/\.md//')
  title=$(cut -d':' -f2- <<< "$note" | sed -e 's/title://' | xargs)

  echo "  * $time [$title](../$file)"
}

new_note() {
  date=$(date +"%Y%m%d%H%M%S")
  book=$1
  # shellcheck disable=SC2124
  title=${@:2}

  [[ -d "${NOTES}/$book" ]] || mkdir -p "$NOTES/$book"
  cat << EOF > "$NOTES/$book/$date.md"
---
title: $title
---

# $title

Related:

Tags:
  #$book
EOF

 generate_readme_files 2>/dev/null || :
 echo "${NOTES}/$book/$date.md"
}


case "$1" in
  "h" | "help")
    help
    ;;
  "")
    vim "+e ${NOTES}/README.md"
    ;;
  "g" | "gen" | "generate-readme-files")
    generate_readme_files
    ;;
  "l" | "link")
    link_note
    ;;
  "n" | "new")
    shift
    new_note "$@"
    ;;
  "search")
    shift
    vim "+Rg $*"
    ;;
  *)
    command_not_found "$@"
    ;;
esac
