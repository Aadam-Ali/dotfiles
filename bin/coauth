#!/usr/bin/env bash
config_dir="${HOME}/.config/coauth"

coauthors="${config_dir}/coauthors"
template="${config_dir}/git-template"

if [[ ! -d "${config_dir}" ]]; then
  mkdir -p "${config_dir}"
  > "${coauthors}"
  > "${template}"
fi

[[ ! -f "${coauthors}" ]] && > "${coauthors}"
[[ ! -f "${template}" ]] && > "${template}"

command="$1"

help () {
  echo "Usage: coauth <subcommand>"
  echo
  echo "  help       Print this help"
  echo "  add        Add a new coauthor to the coauthors file"
  echo "  stop       End a pairing session"
  echo "  list       List all available coauthors"
  echo "  restart    Restart the pairing session"
  echo "  show       Shows the current coauthors"
  echo "  start      Start a pairing session"
}

command_not_found () {
  echo "coauth: unexpected command '$1'" 1>&2
  echo "Try 'coauth help' for more information"
}

add () {
  if [[ "$1" ]]; then
    echo "$1" >> "${coauthors}"
    echo "Added $1 to ${coauthors}"
  else
    echo "Usage: coauth add <tag>"
  fi
}

stop () {
  > "${template}"
  git config --global --unset commit.template
  printf "\e[31mPairing mode disabled. Run 'coauth start' to start session.\e[0m\n"
}

list () {
  awk NF "${coauthors}"
}

restart () {
  start
}

show () {
  awk NF "${template}"
}

start () {
  git config --global commit.template "${template}"

  echo -e "\n" > "${template}"
  while true; do
    author="$(cat "${coauthors}" | fzy)"

    if [[ "${author}" ]]; then
        echo "Co-authored-by: ${author}" >> "${template}"
        echo "Added co-author: ${author}"
    else
        printf "\e[32mPairing mode enabled.\e[0m\n"
        echo "Run 'coauth stop' to end session. Run 'coauth reset' to change co-authors"
        break
    fi
  done
}

case "$1" in
  "" | "help")
    help
    ;;
  "add")
    shift
    add "$@"
    ;;
  "stop")
    stop
    ;;
  "list")
    list
    ;;
  "restart")
    restart
    ;;
  "show")
    show
    ;;
  "start")
    start
    ;;
  *)
    command_not_found "$@"
    ;;
esac
